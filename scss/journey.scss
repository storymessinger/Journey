$primary-color : #74daad;
$primary-color-dark : #4eb185;
$secondary-color : #F1C40F; // Sunflower yellow
$secondary-color-dark : #F39C12;
$black: #3e3632;
$grey-dark: #7a7e7e;
$grey: #e8e9e9;
$grey-light: #f7f7f7;
$white: #ffffff;

/// Computes a top-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function top-shadow($depth) {
  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
  $blur: nth(1.5 3 10 14 19, $depth) * 4px;
  $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));

  @return 0 $primary-offset $blur $color;
}
/// Computes a bottom-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function bottom-shadow($depth) {
  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
  $blur: nth(1 3 3 5 6, $depth) * 4px;
  $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));

  @return 0 $primary-offset $blur $color;
}
/// Gives a card depth effect.
/// @param {Number} $depth - depth level (between 1 and 5)
/// @link http://www.google.com/design/spec/layout/layout-principles.html#layout-principles-dimensionality Google Design
/// @requires {function} top-shadow
/// @requires {function} bottom-shadow
@mixin card($depth) {
  @if $depth < 1 {
    box-shadow: none;
  } @else if $depth > 5 {
    @warn "Invalid $depth `#{$depth}` for mixin `card`.";
  } @else {
    box-shadow: bottom-shadow($depth), top-shadow($depth);
  }
}

// for test
.red {
    border: 1px solid red;
}



html {
    font-size: 16px;
    font-family: 'Lemonada', cursive;
}

// this is for the holyGrail layout
body {
    display: flex;
    min-height: 100vh;
    flex-direction: column;

    .wrapper {
        display: flex;
        flex: 1;
        .sidebar {
            flex: 0 0 16rem;
        }
        .content {
            flex-grow:1;
        }
    }
}

// sidebar design
.sidebar {
    background-color: $primary-color;
    border-right: 10px solid $primary-color-dark;
    color: $grey-light;
    @include card(3);
    ul {
        list-style: none;
        padding: 0;
        li {
            @include card(1);
            background-color: $white;
            color: $grey-dark;
            padding: 1rem 1rem 1rem 1rem;
            margin: 1rem 1rem 1rem 1rem;
            border-radius: 0.5rem;
            cursor: pointer;
        }
        li:hover {
            background-color: $grey-light;
            border: 1px solid $primary-color-dark;
            color: $black;
        }
    }
}
.sidebar_btn {
    display: none;
}
@media (max-width: 1199px) {
    .sidebar {
        display: block;
        position: fixed;
        height: 100vh;
        width: 16rem;
        // box-shadow:
        left:-16rem;
        z-index: 1001;

        transition: all 0.3s ease;
    }
    .unfolded {
        left: 0rem;
    }
    .sidebar_btn {
        display: block;
        position: fixed;
        top: 2rem;
        left: 2rem;
        z-index: 1000;

        color: $grey-light;
    }
    .move_right {
        left: 18rem;
        // this makes one-way transition on sidebar_btn
        transition: all 0.8s ease-out;
    }
    // .make_dimmer {
    //     transition: all 0.3s ease;
    //     display:none;
    // }
    // // make it dim when sidebar is unfolded
    // .dimmer {
    //     display:block;
    //     background:#000;
    //     opacity:0.5;
    //     position:fixed; /*enter code here important to use fixed, not absolute */
    //     top:0;
    //     left:0;
    //     width:100%;
    //     height:100%;
    // }
}





// google maps related
#pano {
    width: 200px;
    height: 200px;
}
